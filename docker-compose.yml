networks:
  noblestride-network:
    external: true

services:
  noblestride-service-db:
    image: postgres:13.3
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: noblestride-service-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - noblestrideservice-db-data:/var/lib/postgresql/data # Persist database data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh # Initialization script
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s
      retries: 5
    # volumes:
    #   - noblestrideservice-db-data:/var/lib/postgresql/data
    networks:
      - noblestride-network

  app:
    image: noblestride_service:1.0
    container_name: noblestride-service
    restart: on-failure
    depends_on:
      noblestride-service-db:
        condition: service_healthy

    networks:
      - noblestride-network
    command: >
      sh -c "
        npx sequelize-cli db:migrate &&
        npx sequelize-cli db:seed:all &&
        npm start
      "
    ports:
      - "3030:3030"
    env_file:
      - .env

    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "3G"

    user: "1000:1000"

volumes:
  noblestrideservice-db-data:
